!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){const o="eds-checkbox",i='\n  <label>\n    <input type="checkbox" />\n    <div class="box">\n      <svg class="check" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n        <path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/>\n      </svg>\n    </div>\n    <span class="label"></span>\n  </label>',s=n(1),c={standard:["autofocus","form",{formaction:"formAction"},{formenctype:"formEnctype"},{formmethod:"formMethod"},{formnovalidate:"formNoValidate"},{formtarget:"formTarget"},"name","value"],flag:["disabled"],get all(){const{standard:e,flag:t}=this;return e.concat(t)}};class a extends EDSElement{static get observedAttributes(){return a.normalizeObservedAttributes(c.all.concat(["checked","label",{tabindex:"tabIndex"}]))}init(){this.initShadowDOM(o,i,s),this.defineDefaultProperties(c.standard),this.defineFlagProperties(c.flag),this._label=this.shadowRoot.querySelector(".label"),this._input=this.shadowRoot.querySelector("input"),this._box=this.shadowRoot.querySelector(".box"),this.addEventListener("focus",()=>this._box.classList.add("focus")),this.addEventListener("blur",()=>this._box.classList.remove("focus")),this._input.addEventListener("change",()=>this.checked=this._input.checked),this._input.addEventListener("click",e=>e.stopPropagation()),this.bubbleShadowEvents(this._input,["change"])}setAttribute(e,t){super.setAttribute(e,t),~c.all.indexOf(e)&&this._input.setAttribute(e,t)}removeAttribute(e){super.removeAttribute(e),~c.all.indexOf(e)&&this._input.removeAttribute(e)}focus(){this._input.focus()}blur(){this._input.blur()}toggle(){this.checked=!this.checked}get label(){return this.getAttribute("label")}set label(e){this.setAttribute("label",e),this._label.innerText=e}get checked(){return this._input.checked}set checked(e){null!==e&&(!1===e?(this.removeAttribute("checked"),this._input.checked=e):(this.setAttribute("checked"),this._input.checked=!0))}get tabIndex(){return this._input.getAttribute("tabIndex")}set tabIndex(e){null!==e&&(this._input.setAttribute("tabIndex",e),this.removeAttribute("tabIndex"))}}customElements.define(o,a),window.EDSCheckboxElement=a},function(e,t){e.exports='/*\n * These variables are available to all components globally and are thus designated with an "eds-" prefix.\n * Components may implement these and pass-through to a local variable name.\n */\n/*\n * These variables are available to all components globally and are thus designated with an "eds-" prefix.\n * Components may implement these and pass-through to a local variable name.\n */\n/* reset button styling\n * source: https://gist.github.com/MoOx/9137295\n */\neds-checkbox {\n  display: inline-block;\n  outline: none; }\n  eds-checkbox .box {\n    box-sizing: border-box;\n    width: 18px;\n    height: 18px;\n    border-radius: 3px;\n    border: 1px solid #939393;\n    display: inline-block;\n    background: #ffffff;\n    position: relative; }\n    eds-checkbox .box .check {\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      fill: #426da9;\n      top: 2px;\n      left: 2px; }\n  eds-checkbox .label {\n    display: inline-block;\n    font-size: 14px;\n    position: relative;\n    top: -4px; }\n  eds-checkbox:not([checked]) .box .check {\n    display: none; }\n  eds-checkbox[checked] .box {\n    border-color: #426da9;\n    background-color: #426da9; }\n    eds-checkbox[checked] .box .check {\n      fill: #ffffff; }\n  eds-checkbox[disabled] {\n    color: #888888; }\n    eds-checkbox[disabled] .box {\n      border-color: #cccccc; }\n      eds-checkbox[disabled] .box .check {\n        fill: #cccccc; }\n    eds-checkbox[disabled][checked] .box {\n      background: #cccccc; }\n      eds-checkbox[disabled][checked] .box .check {\n        fill: #ffffff; }\n    eds-checkbox[disabled] label {\n      cursor: not-allowed; }\n  eds-checkbox:not([disabled]) .box::after {\n    content: \'\';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    border-radius: 4px;\n    border: 2px solid #426da9;\n    opacity: 0;\n    transition: opacity 0.15s ease; }\n  eds-checkbox:not([disabled]) .box.focus::after, eds-checkbox:not([disabled]) .box:focus::after {\n    opacity: 1;\n    transition: opacity 0.15s ease;\n    border-color: #426da9;\n    z-index: 900; }\n  eds-checkbox input {\n    position: absolute;\n    left: -10000px; }\n'}]);
//# sourceMappingURL=eds-checkbox.min.js.map