!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){const o="eds-radio",i='\n  <label>\n    <input type="radio" />\n    <div class="radio-components"></div>\n    <div class="label"></div>\n  </label>',a=n(1),r={standard:["autofocus","form",{formaction:"formAction"},{formenctype:"formEnctype"},{formmethod:"formMethod"},{formnovalidate:"formNoValidate"},{formtarget:"formTarget"},"name","value"],flag:["checked","disabled"],get all(){const{standard:e,flag:t}=this;return e.concat(t)}};class s extends EDSElement{static get observedAttributes(){return s.normalizeObservedAttributes(r.all.concat(["label"]))}init(){this.initShadowDOM(o,i,a),this.defineDefaultProperties(r.standard),this.defineFlagProperties(r.flag);const e=this.$("input"),t=this.$(".label");this._refs={input:e,label:t},e.addEventListener("focus",()=>this.classList.add("focused")),e.addEventListener("blur",()=>this.classList.remove("focused")),e.addEventListener("change",()=>this.checked=e.checked),e.addEventListener("click",e=>e.stopPropagation())}setAttribute(e,t){super.setAttribute(e,t),~r.all.indexOf(e)&&this._refs.input.setAttribute(e,t)}removeAttribute(e){super.removeAttribute(e),~r.all.indexOf(e)&&this._refs.input.removeAttribute(e)}focus(){this._refs.input.focus()}blur(){this._refs.input.blur()}get label(){return this.getAttribute("label")}set label(e){this.setAttribute("label",e),this._refs.label.innerText=e}}customElements.define(o,s),window.EDSRadioElement=s},function(e,t){e.exports="/*\n * These variables are available to all components globally and are thus designated with an \"eds-\" prefix.\n * Components may implement these and pass-through to a local variable name.\n */\n/*\n * These variables are available to all components globally and are thus designated with an \"eds-\" prefix.\n * Components may implement these and pass-through to a local variable name.\n */\n/* reset button styling\n * source: https://gist.github.com/MoOx/9137295\n */\neds-radio {\n  display: inline-block; }\n  eds-radio label {\n    display: flex;\n    align-items: center;\n    color: #333333; }\n  eds-radio .radio-components {\n    position: relative;\n    margin-right: 8px;\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 1px solid #939393; }\n  eds-radio input + .radio-components::after {\n    content: '';\n    display: block;\n    background-color: #426da9;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    margin: 3px 0 0 3px;\n    opacity: 0; }\n  eds-radio input:checked + .radio-components {\n    border-color: #426da9; }\n    eds-radio input:checked + .radio-components::after {\n      opacity: 1; }\n  eds-radio[disabled] .label {\n    color: #888888; }\n  eds-radio[disabled] input + .radio-components {\n    border-color: #cccccc; }\n    eds-radio[disabled] input + .radio-components::after {\n      background-color: #cccccc; }\n  eds-radio .radio-components::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    border-radius: 50%;\n    border: 2px solid #426da9;\n    opacity: 0;\n    transition: opacity 0.15s ease; }\n  eds-radio input:focus + .radio-components::before {\n    opacity: 1; }\n  eds-radio input {\n    position: absolute;\n    left: -10000px; }\n"}]);
//# sourceMappingURL=eds-radio.min.js.map